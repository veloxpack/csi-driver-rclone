// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nodetags.proto

package pb

import (
	proto "github.com/gogo/protobuf/proto"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Tag represents single key, value.
type Tag struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// NodeTagSet
type NodeTagSet struct {
	// must always be set. this is the node the signer is signing for.
	NodeId []byte `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Tags   []*Tag `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	// must always be set. this makes sure the signature is signing the
	// timestamp inside.
	SignedAt             int64    `protobuf:"varint,3,opt,name=signed_at,json=signedAt,proto3" json:"signed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeTagSet) Reset()         { *m = NodeTagSet{} }
func (m *NodeTagSet) String() string { return proto.CompactTextString(m) }
func (*NodeTagSet) ProtoMessage()    {}

func (m *NodeTagSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeTagSet.Unmarshal(m, b)
}
func (m *NodeTagSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeTagSet.Marshal(b, m, deterministic)
}
func (m *NodeTagSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeTagSet.Merge(m, src)
}
func (m *NodeTagSet) XXX_Size() int {
	return xxx_messageInfo_NodeTagSet.Size(m)
}
func (m *NodeTagSet) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeTagSet.DiscardUnknown(m)
}

var xxx_messageInfo_NodeTagSet proto.InternalMessageInfo

func (m *NodeTagSet) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NodeTagSet) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NodeTagSet) GetSignedAt() int64 {
	if m != nil {
		return m.SignedAt
	}
	return 0
}

// SignedNodeTagSet is a tag set with additional signature.
type SignedNodeTagSet struct {
	// this is the serialized form of TagSet, serialized so that
	// the signature process has something stable to work with.
	SerializedTag []byte `protobuf:"bytes,1,opt,name=serialized_tag,json=serializedTag,proto3" json:"serialized_tag,omitempty"`
	// this is who signed (could be self signed, could be well known)
	// public key supposed to be available on satellite side based on this id.
	SignerNodeId []byte `protobuf:"bytes,3,opt,name=signer_node_id,json=signerNodeId,proto3" json:"signer_node_id,omitempty"`
	// the signature of serialized_tag.
	Signature            []byte   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedNodeTagSet) Reset()         { *m = SignedNodeTagSet{} }
func (m *SignedNodeTagSet) String() string { return proto.CompactTextString(m) }
func (*SignedNodeTagSet) ProtoMessage()    {}

func (m *SignedNodeTagSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedNodeTagSet.Unmarshal(m, b)
}
func (m *SignedNodeTagSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedNodeTagSet.Marshal(b, m, deterministic)
}
func (m *SignedNodeTagSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedNodeTagSet.Merge(m, src)
}
func (m *SignedNodeTagSet) XXX_Size() int {
	return xxx_messageInfo_SignedNodeTagSet.Size(m)
}
func (m *SignedNodeTagSet) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedNodeTagSet.DiscardUnknown(m)
}

var xxx_messageInfo_SignedNodeTagSet proto.InternalMessageInfo

func (m *SignedNodeTagSet) GetSerializedTag() []byte {
	if m != nil {
		return m.SerializedTag
	}
	return nil
}

func (m *SignedNodeTagSet) GetSignerNodeId() []byte {
	if m != nil {
		return m.SignerNodeId
	}
	return nil
}

func (m *SignedNodeTagSet) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// SignedNodeTagSets
type SignedNodeTagSets struct {
	Tags                 []*SignedNodeTagSet `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SignedNodeTagSets) Reset()         { *m = SignedNodeTagSets{} }
func (m *SignedNodeTagSets) String() string { return proto.CompactTextString(m) }
func (*SignedNodeTagSets) ProtoMessage()    {}

func (m *SignedNodeTagSets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedNodeTagSets.Unmarshal(m, b)
}
func (m *SignedNodeTagSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedNodeTagSets.Marshal(b, m, deterministic)
}
func (m *SignedNodeTagSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedNodeTagSets.Merge(m, src)
}
func (m *SignedNodeTagSets) XXX_Size() int {
	return xxx_messageInfo_SignedNodeTagSets.Size(m)
}
func (m *SignedNodeTagSets) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedNodeTagSets.DiscardUnknown(m)
}

var xxx_messageInfo_SignedNodeTagSets proto.InternalMessageInfo

func (m *SignedNodeTagSets) GetTags() []*SignedNodeTagSet {
	if m != nil {
		return m.Tags
	}
	return nil
}
